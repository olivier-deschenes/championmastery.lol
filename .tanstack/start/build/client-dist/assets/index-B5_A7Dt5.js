import{c as B,j as v,b as K,d as x,S as fe,e as Q,r as T,u as ue,I as me,B as ve,o as pe,p as ge,f as q,s as Me,g as ae,h as ye,L as Se,D as H}from"./main-Cmqr_NjK.js";import{L as be}from"./loader-circle-B2hfbd1y.js";import{B as X}from"./badge-DAzccFxR.js";/**
 * @license lucide-react v0.540.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */const Fe=[["path",{d:"M20 6 9 17l-5-5",key:"1gmf2c"}]],Ve=B("check",Fe);/**
 * @license lucide-react v0.540.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */const xe=[["line",{x1:"6",x2:"10",y1:"11",y2:"11",key:"1gktln"}],["line",{x1:"8",x2:"8",y1:"9",y2:"13",key:"qnk9ow"}],["line",{x1:"15",x2:"15.01",y1:"12",y2:"12",key:"krot7o"}],["line",{x1:"18",x2:"18.01",y1:"10",y2:"10",key:"1lcuu1"}],["path",{d:"M17.32 5H6.68a4 4 0 0 0-3.978 3.59c-.006.052-.01.101-.017.152C2.604 9.416 2 14.456 2 16a3 3 0 0 0 3 3c1 0 1.5-.5 2-1l1.414-1.414A2 2 0 0 1 9.828 16h4.344a2 2 0 0 1 1.414.586L17 18c.5.5 1 1 2 1a3 3 0 0 0 3-3c0-1.545-.604-6.584-.685-7.258-.007-.05-.011-.1-.017-.151A4 4 0 0 0 17.32 5z",key:"mfqc10"}]],Ae=B("gamepad-2",xe);/**
 * @license lucide-react v0.540.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */const we=[["rect",{width:"7",height:"7",x:"3",y:"3",rx:"1",key:"1g98yp"}],["rect",{width:"7",height:"7",x:"3",y:"14",rx:"1",key:"1bb6yr"}],["path",{d:"M14 4h7",key:"3xa0d5"}],["path",{d:"M14 9h7",key:"1icrd9"}],["path",{d:"M14 15h7",key:"1mj8o2"}],["path",{d:"M14 20h7",key:"11slyb"}]],Ee=B("layout-list",we);/**
 * @license lucide-react v0.540.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */const Ie=[["path",{d:"M12.586 2.586A2 2 0 0 0 11.172 2H4a2 2 0 0 0-2 2v7.172a2 2 0 0 0 .586 1.414l8.704 8.704a2.426 2.426 0 0 0 3.42 0l6.58-6.58a2.426 2.426 0 0 0 0-3.42z",key:"vktsd0"}],["circle",{cx:"7.5",cy:"7.5",r:".5",fill:"currentColor",key:"kqv944"}]],ke=B("tag",Ie);/**
 * @license lucide-react v0.540.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */const Le=[["path",{d:"M18 6 6 18",key:"1bl5f8"}],["path",{d:"m6 6 12 12",key:"d8bk6v"}]],je=B("x",Le);function De({items:i,className:r}){return v.jsx("ul",{className:K("mt-2 flex flex-col gap-2",r),children:i.map(e=>{const{text:s}=Ce(e.status??"neutral");return v.jsxs("li",{className:"flex items-center gap-2 text-sm",children:[v.jsx("span",{className:K("inline-flex h-5 w-5 items-center justify-center"),children:Ne(e.status??"neutral")}),v.jsx("span",{className:"text-emerald-500",children:Oe(e.icon)}),v.jsx("span",{className:K("transition-colors",s),children:e.label}),e.hint&&v.jsx("span",{className:"ml-2 text-xs text-neutral-500",children:e.hint})]},e.id)})})}function Ne(i){switch(i){case"valid":return v.jsx(Ve,{className:"h-4 w-4 text-emerald-400"});case"invalid":return v.jsx(je,{className:"h-4 w-4 text-red-400"});case"pending":return v.jsx(be,{className:"h-4 w-4 animate-spin text-amber-300"});default:return v.jsx("span",{className:"h-2 w-2 rounded-full bg-neutral-600"})}}function Oe(i){switch(i){case"game":return v.jsx(Ae,{className:"h-4 w-4"});case"format":return v.jsx(Ee,{className:"h-4 w-4"});case"tag":return v.jsx(ke,{className:"h-4 w-4"});default:return null}}function Ce(i){switch(i){case"valid":return{text:"text-emerald-600",icon:"text-emerald-400"};case"invalid":return{text:"text-red-500",icon:"text-red-400"};case"pending":return{text:"text-neutral-300",icon:"text-amber-300"};default:return{text:"text-neutral-400",icon:"text-neutral-500"}}}function z(i,r){return typeof i=="function"?i(r):i}function C(i,r){return ie(r).reduce((s,t)=>{if(s===null)return null;if(typeof s<"u")return s[t]},i)}function $(i,r,e){const s=ie(r);function t(a){if(!s.length)return z(e,a);const n=s.shift();if(typeof n=="string"||typeof n=="number"&&!Array.isArray(a))return typeof a=="object"?(a===null&&(a={}),{...a,[n]:t(a[n])}):{[n]:t()};if(Array.isArray(a)&&typeof n=="number"){const l=a.slice(0,n);return[...l.length?l:new Array(n),t(a[n]),...a.slice(n+1)]}return[...new Array(n),t()]}return t(i)}function Te(i,r){const e=ie(r);function s(t){if(!t)return;if(e.length===1){const n=e[0];if(Array.isArray(t)&&typeof n=="number")return t.filter((h,f)=>f!==n);const{[n]:l,...c}=t;return c}const a=e.shift();if(typeof a=="string"&&typeof t=="object")return{...t,[a]:s(t[a])};if(typeof a=="number"&&Array.isArray(t)){if(a>=t.length)return t;const n=t.slice(0,a);return[...n.length?n:new Array(a),s(t[a]),...t.slice(a+1)]}throw new Error("It seems we have created an infinite loop in deleteBy. ")}return s(i)}const Be=/^(\d+)$/gm,$e=/\.(\d+)(?=\.)/gm,_e=/^(\d+)\./gm,Pe=/\.(\d+$)/gm,Re=/\.{2,}/gm,Y="__int__",_=`${Y}$1`;function ie(i){if(Array.isArray(i))return[...i];if(typeof i!="string")throw new Error("Path must be a string.");return i.replace(/(^\[)|]/gm,"").replace(/\[/g,".").replace(Be,_).replace($e,`.${_}.`).replace(_e,`${_}.`).replace(Pe,`.${_}`).replace(Re,".").split(".").map(r=>{if(r.startsWith(Y)){const e=r.substring(Y.length),s=parseInt(e,10);return String(s)===e?s:e}return r})}function Ke(i){return!(Array.isArray(i)&&i.length===0)}function ee(i,r){const e=s=>s.validators.filter(Boolean).map(t=>({cause:t.cause,validate:t.fn}));return r.validationLogic({form:r.form,validators:r.validators,event:{type:i,async:!1},runValidation:e})}function te(i,r){const{asyncDebounceMs:e}=r,{onBlurAsyncDebounceMs:s,onChangeAsyncDebounceMs:t,onDynamicAsyncDebounceMs:a}=r.validators||{},n=e??0,l=c=>c.validators.filter(Boolean).map(h=>{const f=h?.cause||i;let u=n;switch(f){case"change":u=t??n;break;case"blur":u=s??n;break;case"dynamic":u=a??n;break;case"submit":u=0;break}return i==="submit"&&(u=0),{cause:f,validate:h.fn,debounceMs:u}});return r.validationLogic({form:r.form,validators:r.validators,event:{type:i,async:!0},runValidation:l})}const se=i=>!!i&&typeof i=="object"&&"fields"in i;function k(i,r){if(Object.is(i,r))return!0;if(typeof i!="object"||i===null||typeof r!="object"||r===null)return!1;if(i instanceof Map&&r instanceof Map){if(i.size!==r.size)return!1;for(const[t,a]of i)if(!r.has(t)||!Object.is(a,r.get(t)))return!1;return!0}if(i instanceof Set&&r instanceof Set){if(i.size!==r.size)return!1;for(const t of i)if(!r.has(t))return!1;return!0}const e=Object.keys(i),s=Object.keys(r);if(e.length!==s.length)return!1;for(const t of e)if(!s.includes(t)||!k(i[t],r[t]))return!1;return!0}const re=({newFormValidatorError:i,isPreviousErrorFromFormValidator:r,previousErrorValue:e})=>i?{newErrorValue:i,newSource:"form"}:r?{newErrorValue:void 0,newSource:void 0}:e?{newErrorValue:e,newSource:"field"}:{newErrorValue:void 0,newSource:void 0},ne=({formLevelError:i,fieldLevelError:r})=>r?{newErrorValue:r,newSource:"field"}:i?{newErrorValue:i,newSource:"form"}:{newErrorValue:void 0,newSource:void 0},L=i=>{if(!i.validators)return i.runValidation({validators:[],form:i.form});const r=i.event.async,e=r?void 0:{fn:i.validators.onMount,cause:"mount"},s={fn:r?i.validators.onChangeAsync:i.validators.onChange,cause:"change"},t={fn:r?i.validators.onBlurAsync:i.validators.onBlur,cause:"blur"},a={fn:r?i.validators.onSubmitAsync:i.validators.onSubmit,cause:"submit"},n=r?void 0:{fn:()=>{},cause:"server"};switch(i.event.type){case"mount":return i.runValidation({validators:[e],form:i.form});case"submit":return i.runValidation({validators:[s,t,a,n],form:i.form});case"server":return i.runValidation({validators:[],form:i.form});case"blur":return i.runValidation({validators:[t,n],form:i.form});case"change":return i.runValidation({validators:[s,n],form:i.form});default:throw new Error(`Unknown validation event type: ${i.event.type}`)}};function We(i){const r=new Map;for(const e of i){const s=[...e.path??[]].map(t=>{const a=typeof t=="object"?t.key:t;return typeof a=="number"?`[${a}]`:a}).join(".").replace(/\.\[/g,"[");r.set(s,(r.get(s)??[]).concat(e))}return Object.fromEntries(r)}const oe=i=>{const r=We(i);return{form:r,fields:r}},j={validate({value:i,validationSource:r},e){const s=e["~standard"].validate(i);if(s instanceof Promise)throw new Error("async function passed to sync validator");if(s.issues)return r==="field"?s.issues:oe(s.issues)},async validateAsync({value:i,validationSource:r},e){const s=await e["~standard"].validate(i);if(s.issues)return r==="field"?s.issues:oe(s.issues)}},ce=i=>!!i&&"~standard"in i,U={isValidating:!1,isTouched:!1,isBlurred:!1,isDirty:!1,isPristine:!0,isValid:!0,isDefaultValue:!0,errors:[],errorMap:{},errorSourceMap:{}};function P(i){function r(u,o,d,g){const m=s(u,o,d,g);({insert:()=>l(m,u,o),remove:()=>c(m),swap:()=>g!==void 0&&f(m,u,o,g),move:()=>g!==void 0&&h(m,u,o,g)})[d]()}function e(u,o){return`${u}[${o}]`}function s(u,o,d,g){const m=[e(u,o)];if(d==="swap")m.push(e(u,g));else if(d==="move"){const[p,M]=[Math.min(o,g),Math.max(o,g)];for(let y=p;y<=M;y++)m.push(e(u,y))}else{const p=i.getFieldValue(u),M=Array.isArray(p)?p.length:0;for(let y=o+1;y<M;y++)m.push(e(u,y))}return Object.keys(i.fieldInfo).filter(p=>m.some(M=>p.startsWith(M)))}function t(u,o){return u.replace(/\[(\d+)\]/,(d,g)=>{const m=parseInt(g,10);return`[${o==="up"?m+1:Math.max(0,m-1)}]`})}function a(u,o){(o==="up"?u:[...u].reverse()).forEach(g=>{const m=t(g.toString(),o),p=i.getFieldMeta(m);p?i.setFieldMeta(g,p):i.setFieldMeta(g,n())})}const n=()=>U,l=(u,o,d)=>{a(u,"down"),u.forEach(g=>{g.toString().startsWith(e(o,d))&&i.setFieldMeta(g,n())})},c=u=>{a(u,"up")},h=(u,o,d,g)=>{const m=new Map(Object.keys(i.fieldInfo).filter(p=>p.startsWith(e(o,d))).map(p=>[p,i.getFieldMeta(p)]));a(u,d<g?"up":"down"),Object.keys(i.fieldInfo).filter(p=>p.startsWith(e(o,g))).forEach(p=>{const M=p.replace(e(o,g),e(o,d)),y=m.get(M);y&&i.setFieldMeta(p,y)})},f=(u,o,d,g)=>{u.forEach(m=>{if(!m.toString().startsWith(e(o,d)))return;const p=m.toString().replace(e(o,d),e(o,g)),[M,y]=[i.getFieldMeta(m),i.getFieldMeta(p)];M&&i.setFieldMeta(p,M),y&&i.setFieldMeta(m,y)})};return{handleArrayFieldMetaShift:r}}function J(i){return{values:i.values??{},errorMap:i.errorMap??{},fieldMetaBase:i.fieldMetaBase??{},isSubmitted:i.isSubmitted??!1,isSubmitting:i.isSubmitting??!1,isValidating:i.isValidating??!1,submissionAttempts:i.submissionAttempts??0,isSubmitSuccessful:i.isSubmitSuccessful??!1,validationMetaMap:i.validationMetaMap??{onChange:void 0,onBlur:void 0,onSubmit:void 0,onMount:void 0,onServer:void 0,onDynamic:void 0}}}class Ue{constructor(r){this.options={},this.fieldInfo={},this.prevTransformArray=[],this.mount=()=>{const e=this.fieldMetaDerived.mount(),s=this.store.mount(),t=()=>{e(),s()};this.options.listeners?.onMount?.({formApi:this});const{onMount:a}=this.options.validators||{};return a&&this.validateSync("mount"),t},this.update=e=>{if(!e)return;const s=this.options;this.options=e;const t=!!e.transform?.deps?.some((l,c)=>l!==this.prevTransformArray[c]),a=e.defaultValues&&!k(e.defaultValues,s.defaultValues)&&!this.state.isTouched,n=!k(e.defaultState,s.defaultState)&&!this.state.isTouched;!a&&!n&&!t||x(()=>{this.baseStore.setState(()=>J(Object.assign({},this.state,n?e.defaultState:{},a?{values:e.defaultValues}:{},t?{_force_re_eval:!this.state._force_re_eval}:{})))})},this.reset=(e,s)=>{const{fieldMeta:t}=this.state,a=this.resetFieldMeta(t);e&&!s?.keepDefaultValues&&(this.options={...this.options,defaultValues:e}),this.baseStore.setState(()=>J({...this.options.defaultState,values:e??this.options.defaultValues??this.options.defaultState?.values,fieldMetaBase:a}))},this.validateAllFields=async e=>{const s=[];return x(()=>{Object.values(this.fieldInfo).forEach(a=>{if(!a.instance)return;const n=a.instance;s.push(Promise.resolve().then(()=>n.validate(e,{skipFormValidation:!0}))),a.instance.state.meta.isTouched||a.instance.setMeta(l=>({...l,isTouched:!0}))})}),(await Promise.all(s)).flat()},this.validateArrayFieldsStartingFrom=async(e,s,t)=>{const a=this.getFieldValue(e),n=Array.isArray(a)?Math.max(a.length-1,0):null,l=[`${e}[${s}]`];for(let u=s+1;u<=(n??0);u++)l.push(`${e}[${u}]`);const c=Object.keys(this.fieldInfo).filter(u=>l.some(o=>u.startsWith(o))),h=[];return x(()=>{c.forEach(u=>{h.push(Promise.resolve().then(()=>this.validateField(u,t)))})}),(await Promise.all(h)).flat()},this.validateField=(e,s)=>{const t=this.fieldInfo[e]?.instance;return t?(t.state.meta.isTouched||t.setMeta(a=>({...a,isTouched:!0})),t.validate(s)):[]},this.validateSync=e=>{const s=ee(e,{...this.options,form:this,validationLogic:this.options.validationLogic||L});let t=!1;const a={};return x(()=>{for(const c of s){if(!c.validate)continue;const h=this.runValidator({validate:c.validate,value:{value:this.state.values,formApi:this,validationSource:"form"},type:"validate"}),{formError:f,fieldErrors:u}=W(h),o=O(c.cause);for(const d of Object.keys(this.state.fieldMeta)){const g=this.getFieldMeta(d);if(!g)continue;const{errorMap:m,errorSourceMap:p}=g,M=u?.[d],{newErrorValue:y,newSource:b}=re({newFormValidatorError:M,isPreviousErrorFromFormValidator:p?.[o]==="form",previousErrorValue:m?.[o]});b==="form"&&(a[d]={...a[d],[o]:M}),m?.[o]!==y&&this.setFieldMeta(d,F=>({...F,errorMap:{...F.errorMap,[o]:y},errorSourceMap:{...F.errorSourceMap,[o]:b}}))}this.state.errorMap?.[o]!==f&&this.baseStore.setState(d=>({...d,errorMap:{...d.errorMap,[o]:f}})),(f||u)&&(t=!0)}const n=O("submit");this.state.errorMap?.[n]&&e!=="submit"&&!t&&this.baseStore.setState(c=>({...c,errorMap:{...c.errorMap,[n]:void 0}}));const l=O("server");this.state.errorMap?.[l]&&e!=="server"&&!t&&this.baseStore.setState(c=>({...c,errorMap:{...c.errorMap,[l]:void 0}}))}),{hasErrored:t,fieldsErrorMap:a}},this.validateAsync=async e=>{const s=te(e,{...this.options,form:this,validationLogic:this.options.validationLogic||L});this.state.isFormValidating||this.baseStore.setState(c=>({...c,isFormValidating:!0}));const t=[];let a;for(const c of s){if(!c.validate)continue;const h=O(c.cause);this.state.validationMetaMap[h]?.lastAbortController.abort();const u=new AbortController;this.state.validationMetaMap[h]={lastAbortController:u},t.push(new Promise(async o=>{let d;try{d=await new Promise((M,y)=>{setTimeout(async()=>{if(u.signal.aborted)return M(void 0);try{M(await this.runValidator({validate:c.validate,value:{value:this.state.values,formApi:this,validationSource:"form",signal:u.signal},type:"validateAsync"}))}catch(b){y(b)}},c.debounceMs)})}catch(M){d=M}const{formError:g,fieldErrors:m}=W(d);m&&(a=a?{...a,...m}:m);const p=O(c.cause);for(const M of Object.keys(this.state.fieldMeta)){const y=this.getFieldMeta(M);if(!y)continue;const{errorMap:b,errorSourceMap:F}=y,w=a?.[M],{newErrorValue:A,newSource:D}=re({newFormValidatorError:w,isPreviousErrorFromFormValidator:F?.[p]==="form",previousErrorValue:b?.[p]});b?.[p]!==A&&this.setFieldMeta(M,V=>({...V,errorMap:{...V.errorMap,[p]:A},errorSourceMap:{...V.errorSourceMap,[p]:D}}))}this.baseStore.setState(M=>({...M,errorMap:{...M.errorMap,[p]:g}})),o(a?{fieldErrors:a,errorMapKey:p}:void 0)}))}let n=[];const l={};if(t.length){n=await Promise.all(t);for(const c of n)if(c?.fieldErrors){const{errorMapKey:h}=c;for(const[f,u]of Object.entries(c.fieldErrors)){const d={...l[f]||{},[h]:u};l[f]=d}}}return this.baseStore.setState(c=>({...c,isFormValidating:!1})),l},this.validate=e=>{const{hasErrored:s,fieldsErrorMap:t}=this.validateSync(e);return s&&!this.options.asyncAlways?t:this.validateAsync(e)},this.getFieldValue=e=>C(this.state.values,e),this.getFieldMeta=e=>this.state.fieldMeta[e],this.getFieldInfo=e=>this.fieldInfo[e]||={instance:null,validationMetaMap:{onChange:void 0,onBlur:void 0,onSubmit:void 0,onMount:void 0,onServer:void 0,onDynamic:void 0}},this.setFieldMeta=(e,s)=>{this.baseStore.setState(t=>({...t,fieldMetaBase:{...t.fieldMetaBase,[e]:z(s,t.fieldMetaBase[e])}}))},this.resetFieldMeta=e=>Object.keys(e).reduce((s,t)=>{const a=t;return s[a]=U,s},{}),this.setFieldValue=(e,s,t)=>{const a=t?.dontUpdateMeta??!1;x(()=>{a||this.setFieldMeta(e,n=>({...n,isTouched:!0,isDirty:!0,errorMap:{...n?.errorMap,onMount:void 0}})),this.baseStore.setState(n=>({...n,values:$(n.values,e,s)}))})},this.deleteField=e=>{const t=[...Object.keys(this.fieldInfo).filter(a=>{const n=e.toString();return a!==n&&a.startsWith(n)}),e];this.baseStore.setState(a=>{const n={...a};return t.forEach(l=>{n.values=Te(n.values,l),delete this.fieldInfo[l],delete n.fieldMetaBase[l]}),n})},this.pushFieldValue=(e,s,t)=>{this.setFieldValue(e,a=>[...Array.isArray(a)?a:[],s],t),this.validateField(e,"change")},this.insertFieldValue=async(e,s,t,a)=>{this.setFieldValue(e,n=>[...n.slice(0,s),t,...n.slice(s)],a),await this.validateField(e,"change"),P(this).handleArrayFieldMetaShift(e,s,"insert"),await this.validateArrayFieldsStartingFrom(e,s,"change")},this.replaceFieldValue=async(e,s,t,a)=>{this.setFieldValue(e,n=>n.map((l,c)=>c===s?t:l),a),await this.validateField(e,"change"),await this.validateArrayFieldsStartingFrom(e,s,"change")},this.removeFieldValue=async(e,s,t)=>{const a=this.getFieldValue(e),n=Array.isArray(a)?Math.max(a.length-1,0):null;if(this.setFieldValue(e,l=>l.filter((c,h)=>h!==s),t),P(this).handleArrayFieldMetaShift(e,s,"remove"),n!==null){const l=`${e}[${n}]`;this.deleteField(l)}await this.validateField(e,"change"),await this.validateArrayFieldsStartingFrom(e,s,"change")},this.swapFieldValues=(e,s,t,a)=>{this.setFieldValue(e,n=>{const l=n[s],c=n[t];return $($(n,`${s}`,c),`${t}`,l)},a),P(this).handleArrayFieldMetaShift(e,s,"swap",t),this.validateField(e,"change"),this.validateField(`${e}[${s}]`,"change"),this.validateField(`${e}[${t}]`,"change")},this.moveFieldValues=(e,s,t,a)=>{this.setFieldValue(e,n=>{const l=[...n];return l.splice(t,0,l.splice(s,1)[0]),l},a),P(this).handleArrayFieldMetaShift(e,s,"move",t),this.validateField(e,"change"),this.validateField(`${e}[${s}]`,"change"),this.validateField(`${e}[${t}]`,"change")},this.clearFieldValues=(e,s)=>{const t=this.getFieldValue(e),a=Array.isArray(t)?Math.max(t.length-1,0):null;if(this.setFieldValue(e,[],s),a!==null)for(let n=0;n<=a;n++){const l=`${e}[${n}]`;this.deleteField(l)}this.validateField(e,"change")},this.resetField=e=>{this.baseStore.setState(s=>({...s,fieldMetaBase:{...s.fieldMetaBase,[e]:U},values:this.options.defaultValues?$(s.values,e,C(this.options.defaultValues,e)):s.values}))},this.getAllErrors=()=>({form:{errors:this.state.errors,errorMap:this.state.errorMap},fields:Object.entries(this.state.fieldMeta).reduce((e,[s,t])=>(Object.keys(t).length&&t.errors.length&&(e[s]={errors:t.errors,errorMap:t.errorMap}),e),{})}),this.parseValuesWithSchema=e=>j.validate({value:this.state.values,validationSource:"form"},e),this.parseValuesWithSchemaAsync=e=>j.validateAsync({value:this.state.values,validationSource:"form"},e),this.baseStore=new fe(J({...r?.defaultState,values:r?.defaultValues??r?.defaultState?.values})),this.fieldMetaDerived=new Q({deps:[this.baseStore],fn:({prevDepVals:e,currDepVals:s,prevVal:t})=>{const a=t,n=e?.[0],l=s[0];let c=0;const h={};for(const f of Object.keys(l.fieldMetaBase)){const u=l.fieldMetaBase[f],o=n?.fieldMetaBase[f],d=a?.[f],g=C(l.values,f);let m=d?.errors;if(!o||u.errorMap!==o.errorMap){m=Object.values(u.errorMap??{}).filter(F=>F!==void 0);const b=this.getFieldInfo(f)?.instance;b&&!b.options.disableErrorFlat&&(m=m?.flat(1))}const p=!Ke(m??[]),M=!u.isDirty,y=k(g,C(this.options.defaultValues,f))||k(g,this.getFieldInfo(f)?.instance?.options.defaultValue);if(d&&d.isPristine===M&&d.isValid===p&&d.isDefaultValue===y&&d.errors===m&&u===o){h[f]=d,c++;continue}h[f]={...u,errors:m,isPristine:M,isValid:p,isDefaultValue:y}}return Object.keys(l.fieldMetaBase).length&&a&&c===Object.keys(l.fieldMetaBase).length?a:h}}),this.store=new Q({deps:[this.baseStore,this.fieldMetaDerived],fn:({prevDepVals:e,currDepVals:s,prevVal:t})=>{const a=t,n=e?.[0],l=s[0],c=s[1],h=Object.values(c).filter(Boolean),f=h.some(S=>S.isValidating),u=h.every(S=>S.isValid),o=h.some(S=>S.isTouched),d=h.some(S=>S.isBlurred),g=h.every(S=>S.isDefaultValue),m=o&&l.errorMap?.onMount,p=h.some(S=>S.isDirty),M=!p,y=!!(l.errorMap?.onMount||h.some(S=>S?.errorMap?.onMount)),b=!!f;let F=a?.errors??[];(!n||l.errorMap!==n.errorMap)&&(F=Object.values(l.errorMap).reduce((S,E)=>E===void 0?S:E&&se(E)?(S.push(E.form),S):(S.push(E),S),[]));const w=F.length===0,A=u&&w,D=this.options.canSubmitWhenInvalid??!1,V=l.submissionAttempts===0&&!o&&!y||!b&&!l.isSubmitting&&A||D;let I=l.errorMap;if(m&&(F=F.filter(S=>S!==l.errorMap.onMount),I=Object.assign(I,{onMount:void 0})),a&&n&&a.errorMap===I&&a.fieldMeta===this.fieldMetaDerived.state&&a.errors===F&&a.isFieldsValidating===f&&a.isFieldsValid===u&&a.isFormValid===w&&a.isValid===A&&a.canSubmit===V&&a.isTouched===o&&a.isBlurred===d&&a.isPristine===M&&a.isDefaultValue===g&&a.isDirty===p&&k(n,l))return a;let N={...l,errorMap:I,fieldMeta:this.fieldMetaDerived.state,errors:F,isFieldsValidating:f,isFieldsValid:u,isFormValid:w,isValid:A,canSubmit:V,isTouched:o,isBlurred:d,isPristine:M,isDefaultValue:g,isDirty:p};const G=this.options.transform?.deps??[];if(G.length!==this.prevTransformArray.length||G.some((S,E)=>S!==this.prevTransformArray[E])){const S=Object.assign({},this,{state:N});this.options.transform?.fn(S),N=S.state,this.prevTransformArray=G}return N}}),this.handleSubmit=this.handleSubmit.bind(this),this.update(r||{})}get state(){return this.store.state}get formId(){return this.options.formId}runValidator(r){return ce(r.validate)?j[r.type](r.value,r.validate):r.validate(r.value)}async handleSubmit(r){if(this.baseStore.setState(t=>({...t,isSubmitted:!1,submissionAttempts:t.submissionAttempts+1,isSubmitSuccessful:!1})),x(()=>{Object.values(this.fieldInfo).forEach(t=>{t.instance&&(t.instance.state.meta.isTouched||t.instance.setMeta(a=>({...a,isTouched:!0})))})}),!this.state.canSubmit)return;const e=r??this.options.onSubmitMeta;this.baseStore.setState(t=>({...t,isSubmitting:!0}));const s=()=>{this.baseStore.setState(t=>({...t,isSubmitting:!1}))};if(await this.validateAllFields("submit"),!this.state.isFieldsValid){s(),this.options.onSubmitInvalid?.({value:this.state.values,formApi:this,meta:e});return}if(await this.validate("submit"),!this.state.isValid){s(),this.options.onSubmitInvalid?.({value:this.state.values,formApi:this,meta:e});return}x(()=>{Object.values(this.fieldInfo).forEach(t=>{t.instance?.options.listeners?.onSubmit?.({value:t.instance.state.value,fieldApi:t.instance})})}),this.options.listeners?.onSubmit?.({formApi:this,meta:e});try{await this.options.onSubmit?.({value:this.state.values,formApi:this,meta:e}),x(()=>{this.baseStore.setState(t=>({...t,isSubmitted:!0,isSubmitSuccessful:!0})),s()})}catch(t){throw this.baseStore.setState(a=>({...a,isSubmitSuccessful:!1})),s(),t}}setErrorMap(r){x(()=>{Object.entries(r).forEach(([e,s])=>{const t=e;if(se(s)){const{formError:a,fieldErrors:n}=W(s);for(const l of Object.keys(this.fieldInfo))this.getFieldMeta(l)&&this.setFieldMeta(l,h=>({...h,errorMap:{...h.errorMap,[t]:n?.[l]},errorSourceMap:{...h.errorSourceMap,[t]:"form"}}));this.baseStore.setState(l=>({...l,errorMap:{...l.errorMap,[t]:a}}))}else this.baseStore.setState(a=>({...a,errorMap:{...a.errorMap,[t]:s}}))})})}}function W(i){if(i){if(se(i)){const r=W(i.form).formError,e=i.fields;return{formError:r,fieldErrors:e}}return{formError:i}}return{formError:void 0}}function O(i){switch(i){case"submit":return"onSubmit";case"blur":return"onBlur";case"mount":return"onMount";case"server":return"onServer";case"dynamic":return"onDynamic";case"change":default:return"onChange"}}class Ze{constructor(r){this.options={},this.mount=()=>{const e=this.store.mount();this.options.defaultValue!==void 0&&this.form.setFieldValue(this.name,this.options.defaultValue,{dontUpdateMeta:!0});const s=this.getInfo();s.instance=this,this.update(this.options);const{onMount:t}=this.options.validators||{};if(t){const a=this.runValidator({validate:t,value:{value:this.state.value,fieldApi:this,validationSource:"field"},type:"validate"});a&&this.setMeta(n=>({...n,errorMap:{...n?.errorMap,onMount:a},errorSourceMap:{...n?.errorSourceMap,onMount:"field"}}))}return this.options.listeners?.onMount?.({value:this.state.value,fieldApi:this}),e},this.update=e=>{this.options=e;const s=this.name!==e.name;if(this.name=e.name,this.state.value===void 0){const t=C(e.form.options.defaultValues,e.name),a=e.defaultValue??t;s?this.setValue(n=>n||a,{dontUpdateMeta:!0}):a!==void 0&&this.setValue(a,{dontUpdateMeta:!0})}this.form.getFieldMeta(this.name)===void 0&&this.setMeta(this.state.meta)},this.getValue=()=>this.form.getFieldValue(this.name),this.setValue=(e,s)=>{this.form.setFieldValue(this.name,e,s),this.triggerOnChangeListener(),this.validate("change")},this.getMeta=()=>this.store.state.meta,this.setMeta=e=>this.form.setFieldMeta(this.name,e),this.getInfo=()=>this.form.getFieldInfo(this.name),this.pushValue=(e,s)=>{this.form.pushFieldValue(this.name,e,s),this.triggerOnChangeListener()},this.insertValue=(e,s,t)=>{this.form.insertFieldValue(this.name,e,s,t),this.triggerOnChangeListener()},this.replaceValue=(e,s,t)=>{this.form.replaceFieldValue(this.name,e,s,t),this.triggerOnChangeListener()},this.removeValue=(e,s)=>{this.form.removeFieldValue(this.name,e,s),this.triggerOnChangeListener()},this.swapValues=(e,s,t)=>{this.form.swapFieldValues(this.name,e,s,t),this.triggerOnChangeListener()},this.moveValue=(e,s,t)=>{this.form.moveFieldValues(this.name,e,s,t),this.triggerOnChangeListener()},this.clearValues=e=>{this.form.clearFieldValues(this.name,e),this.triggerOnChangeListener()},this.getLinkedFields=e=>{const s=Object.values(this.form.fieldInfo),t=[];for(const a of s){if(!a.instance)continue;const{onChangeListenTo:n,onBlurListenTo:l}=a.instance.options.validators||{};e==="change"&&n?.includes(this.name)&&t.push(a.instance),e==="blur"&&l?.includes(this.name)&&t.push(a.instance)}return t},this.validateSync=(e,s)=>{const t=ee(e,{...this.options,form:this.form,validationLogic:this.form.options.validationLogic||L}),n=this.getLinkedFields(e).reduce((h,f)=>{const u=ee(e,{...f.options,form:f.form,validationLogic:f.form.options.validationLogic||L});return u.forEach(o=>{o.field=f}),h.concat(u)},[]);let l=!1;x(()=>{const h=(f,u)=>{const o=R(u.cause),d=u.validate?le(f.runValidator({validate:u.validate,value:{value:f.store.state.value,validationSource:"field",fieldApi:f},type:"validate"})):void 0,g=s[o],{newErrorValue:m,newSource:p}=ne({formLevelError:g,fieldLevelError:d});f.state.meta.errorMap?.[o]!==m&&f.setMeta(M=>({...M,errorMap:{...M.errorMap,[o]:m},errorSourceMap:{...M.errorSourceMap,[o]:p}})),m&&(l=!0)};for(const f of t)h(this,f);for(const f of n)f.validate&&h(f.field,f)});const c=R("submit");return this.state.meta.errorMap?.[c]&&e!=="submit"&&!l&&this.setMeta(h=>({...h,errorMap:{...h.errorMap,[c]:void 0},errorSourceMap:{...h.errorSourceMap,[c]:void 0}})),{hasErrored:l}},this.validateAsync=async(e,s)=>{const t=te(e,{...this.options,form:this.form,validationLogic:this.form.options.validationLogic||L}),a=await s,n=this.getLinkedFields(e),l=n.reduce((o,d)=>{const g=te(e,{...d.options,form:d.form,validationLogic:d.form.options.validationLogic||L});return g.forEach(m=>{m.field=d}),o.concat(g)},[]);this.state.meta.isValidating||this.setMeta(o=>({...o,isValidating:!0}));for(const o of n)o.setMeta(d=>({...d,isValidating:!0}));const c=[],h=[],f=(o,d,g)=>{const m=R(d.cause);o.getInfo().validationMetaMap[m]?.lastAbortController.abort();const M=new AbortController;this.getInfo().validationMetaMap[m]={lastAbortController:M},g.push(new Promise(async y=>{let b;try{b=await new Promise((V,I)=>{this.timeoutIds.validations[d.cause]&&clearTimeout(this.timeoutIds.validations[d.cause]),this.timeoutIds.validations[d.cause]=setTimeout(async()=>{if(M.signal.aborted)return V(void 0);try{V(await this.runValidator({validate:d.validate,value:{value:o.store.state.value,fieldApi:o,signal:M.signal,validationSource:"field"},type:"validateAsync"}))}catch(N){I(N)}},d.debounceMs)})}catch(V){b=V}if(M.signal.aborted)return y(void 0);const F=le(b),w=a[this.name]?.[m],{newErrorValue:A,newSource:D}=ne({formLevelError:w,fieldLevelError:F});o.setMeta(V=>({...V,errorMap:{...V?.errorMap,[m]:A},errorSourceMap:{...V.errorSourceMap,[m]:D}})),y(A)}))};for(const o of t)o.validate&&f(this,o,c);for(const o of l)o.validate&&f(o.field,o,h);let u=[];(c.length||h.length)&&(u=await Promise.all(c),await Promise.all(h)),this.setMeta(o=>({...o,isValidating:!1}));for(const o of n)o.setMeta(d=>({...d,isValidating:!1}));return u.filter(Boolean)},this.validate=(e,s)=>{if(!this.state.meta.isTouched)return[];const{fieldsErrorMap:t}=s?.skipFormValidation?{fieldsErrorMap:{}}:this.form.validateSync(e),{hasErrored:a}=this.validateSync(e,t[this.name]??{});if(a&&!this.options.asyncAlways)return this.getInfo().validationMetaMap[R(e)]?.lastAbortController.abort(),this.state.meta.errors;const n=s?.skipFormValidation?Promise.resolve({}):this.form.validateAsync(e);return this.validateAsync(e,n)},this.handleChange=e=>{this.setValue(e)},this.handleBlur=()=>{this.state.meta.isTouched||this.setMeta(s=>({...s,isTouched:!0})),this.state.meta.isBlurred||this.setMeta(s=>({...s,isBlurred:!0})),this.validate("blur"),this.triggerOnBlurListener()},this.parseValueWithSchema=e=>j.validate({value:this.state.value,validationSource:"field"},e),this.parseValueWithSchemaAsync=e=>j.validateAsync({value:this.state.value,validationSource:"field"},e),this.form=r.form,this.name=r.name,this.timeoutIds={validations:{},listeners:{},formListeners:{}},this.store=new Q({deps:[this.form.store],fn:()=>{const e=this.form.getFieldValue(this.name),s=this.form.getFieldMeta(this.name)??{...U,...r.defaultMeta};return{value:e,meta:s}}}),this.options=r}get state(){return this.store.state}runValidator(r){return ce(r.validate)?j[r.type](r.value,r.validate):r.validate(r.value)}setErrorMap(r){this.setMeta(e=>({...e,errorMap:{...e.errorMap,...r}}))}triggerOnBlurListener(){const r=this.form.options.listeners?.onBlurDebounceMs;r&&r>0?(this.timeoutIds.formListeners.blur&&clearTimeout(this.timeoutIds.formListeners.blur),this.timeoutIds.formListeners.blur=setTimeout(()=>{this.form.options.listeners?.onBlur?.({formApi:this.form,fieldApi:this})},r)):this.form.options.listeners?.onBlur?.({formApi:this.form,fieldApi:this});const e=this.options.listeners?.onBlurDebounceMs;e&&e>0?(this.timeoutIds.listeners.blur&&clearTimeout(this.timeoutIds.listeners.blur),this.timeoutIds.listeners.blur=setTimeout(()=>{this.options.listeners?.onBlur?.({value:this.state.value,fieldApi:this})},e)):this.options.listeners?.onBlur?.({value:this.state.value,fieldApi:this})}triggerOnChangeListener(){const r=this.form.options.listeners?.onChangeDebounceMs;r&&r>0?(this.timeoutIds.formListeners.change&&clearTimeout(this.timeoutIds.formListeners.change),this.timeoutIds.formListeners.change=setTimeout(()=>{this.form.options.listeners?.onChange?.({formApi:this.form,fieldApi:this})},r)):this.form.options.listeners?.onChange?.({formApi:this.form,fieldApi:this});const e=this.options.listeners?.onChangeDebounceMs;e&&e>0?(this.timeoutIds.listeners.change&&clearTimeout(this.timeoutIds.listeners.change),this.timeoutIds.listeners.change=setTimeout(()=>{this.options.listeners?.onChange?.({value:this.state.value,fieldApi:this})},e)):this.options.listeners?.onChange?.({value:this.state.value,fieldApi:this})}}function le(i){if(i)return i}function R(i){switch(i){case"submit":return"onSubmit";case"blur":return"onBlur";case"mount":return"onMount";case"server":return"onServer";case"dynamic":return"onDynamic";case"change":default:return"onChange"}}const Z=typeof window<"u"?T.useLayoutEffect:T.useEffect;function ze(i){const[r]=T.useState(()=>{const s=new Ze({...i,form:i.form,name:i.name});return s.Field=de,s});return Z(r.mount,[r]),Z(()=>{r.update(i)}),ue(r.store,i.mode==="array"?e=>[e.meta,Object.keys(e.value??[]).length]:void 0),r}const de=({children:i,...r})=>{const e=ze(r),s=T.useMemo(()=>z(i,e),[i,e,e.state.value,e.state.meta]);return v.jsx(v.Fragment,{children:s})};function Ge({form:i,selector:r,children:e}){const s=ue(i.store,r);return z(e,s)}function qe(i){const[r]=T.useState(()=>{const e=new Ue(i),s=e;return s.Field=function(a){return v.jsx(de,{...a,form:e})},s.Subscribe=function(a){return v.jsx(Ge,{form:e,selector:a.selector,children:a.children})},s});return Z(r.mount,[]),Z(()=>{r.update(i)}),r}const he=/^[\p{Zs}]*(?:[\p{L}\p{N}][\p{L}\p{N}\p{Zs}]*)+[\p{Zs}]*#[\p{Zs}]*(?:[\p{L}\p{N}][\p{L}\p{N}\p{Zs}]*)+[\p{Zs}]*$/u,He=/^\s*(?:[\p{L}\p{N}][\p{Zs}]*){3,16}#/u,Xe=/#(?:[\p{Zs}]*[\p{L}\p{N}]){3,5}[\p{Zs}]*$/u,Je=/^[\p{L}\p{N}\p{Zs}]*$/u,Qe=/^[\p{L}\p{N}\p{Zs}]*$/u,Ye=pe({riotId:ge(Me(),q(he,"RiotIdForm-#_CHECK"),q(He,"RiotIdForm-GAME_NAME"),q(Xe,"RiotIdForm-TAG_LINE"))});function et({onSuccess:i}){const r=qe({defaultValues:{riotId:""},validators:{onChange:Ye},onSubmit:async({value:e})=>{i?.(e.riotId)}});return v.jsxs("form",{onSubmit:e=>{e.preventDefault(),e.stopPropagation(),r.handleSubmit()},className:"flex items-start gap-3",children:[v.jsx("div",{className:"w-full max-w-md",children:v.jsx(r.Field,{name:"riotId",children:e=>v.jsxs(v.Fragment,{children:[v.jsx(me,{id:e.name,name:e.name,value:e.state.value,onBlur:e.handleBlur,onChange:s=>e.handleChange(s.target.value),placeholder:"GameName#TagLine",className:"bg-neutral-900 border-neutral-800 text-neutral-200 placeholder:text-neutral-500"}),v.jsx(tt,{field:e,className:"mt-3"})]})})}),v.jsx(r.Subscribe,{selector:e=>[e.canSubmit,e.isSubmitting],children:([e,s])=>v.jsx(ve,{type:"submit",disabled:!e,children:s?"...":"Submit"})})]})}function tt({field:i,className:r}){const e=String(i.state.value??""),s=st(e);return v.jsx("div",{className:K("text-sm",r),children:v.jsx(De,{items:[{id:"game",label:"Game Name",hint:"min 3, max 16",status:s.game,icon:"game"},{id:"format",label:"Format",hint:void 0,status:s.format,icon:"format"},{id:"tag",label:"Tag Line",hint:"min 3, max 5",status:s.tag,icon:"tag"}]})})}function st(i){if(!i)return{game:"neutral",tag:"neutral",format:"neutral"};const[r="",e=""]=i.split("#",2);let s="neutral";r.length>0&&(Je.test(r)?r.length<3?s="pending":r.length>16?s="invalid":s="valid":s="invalid");let t="neutral";i.includes("#")&&(Qe.test(e)?e.length===0||e.length<3?t="pending":e.length>5?t="invalid":t="valid":t="invalid");const a=he.test(i)?"valid":(i.includes("#"),"pending");return{game:s,tag:t,format:a}}function ot(){const i=ae.useLoaderData(),r=ae.useNavigate(),e=ye({from:"/lol"}),s=t=>{r({to:"/lol/summoner/$riotID",params:{riotID:t},search:{queue:"RANKED_SOLO_5x5"}})};return v.jsxs("div",{className:"flex container mx-auto flex-col",children:[v.jsx("div",{className:"flex gap-2 p-5 items-center justify-center",children:v.jsx(et,{onSuccess:s})}),v.jsx("div",{className:"flex gap-2.5 flex-col",children:i.map(t=>{const a=t.statistics.find(h=>h.queueType==="RANKED_SOLO_5x5"),n=a?.mainChampionBackgroundColor,l=a?.mainChampionForegroundColor,c=t.leagues.find(h=>h.queueType==="RANKED_SOLO_5x5");return v.jsx(Se,{className:"bg-main/25 p-2.5 rounded-md",to:"/lol/summoner/$riotID",params:{riotID:t.riotId.replace("#","-")},search:{queue:"RANKED_SOLO_5x5"},style:{"--color-main":n??void 0,"--color-main-foreground":l??void 0},children:v.jsxs("div",{className:"flex gap-1.5 items-center",children:[v.jsx("div",{className:"w-15 aspect-square rounded-md relative bg-cover",style:{backgroundImage:`url(${H.getProfileIconUrl(e.latest_version,t.profileIconId)})`},children:v.jsx(X,{className:"bg-main/70 text-main-foreground text-xs p-0 px-1 absolute left-1/2 bottom-0 -translate-x-1/2 translate-y-1/2",children:t.summonerLevel})}),v.jsxs("div",{className:"flex flex-col gap-0.5",children:[v.jsxs("div",{className:"flex gap-1 items-center",children:[v.jsx("div",{children:t.riotId}),v.jsx(X,{className:"px-1 h-5 text-xs font-mono tabular-nums bg-main/80 font-bold text-main-foreground",children:t.region})]}),a?v.jsxs(X,{className:"px-1",children:[v.jsx("img",{className:"w-4 rounded-md",src:H.getChampionIconUrlFromParticipant(e.champions,e.latest_version,{championId:a.mainChampionId}),alt:""}),v.jsxs("div",{children:[v.jsxs("span",{className:"font-bold",children:[H.getChampionName(e.champions,a.mainChampionId)," "]}),"main"]})]}):null]}),c?v.jsxs("div",{className:"flex ml-auto flex-col gap-0.5 justify-center items-end",children:[v.jsx("div",{children:`${c.tier} ${c.rank} — ${c.leaguePoints}LP`}),v.jsx("div",{children:`${c.wins+c.losses} matches — ${(100*c.wins/(c.wins+c.losses)).toFixed(0)}%`})]}):null]})},`default-link-${t.puuid}`)})})]})}export{ot as component};
